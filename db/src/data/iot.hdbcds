context iot {
    @Comment : 'Sensor Datapoint Header Definition'
    entity DataPoint {
            @Comment : 'unique Id of datapoint'
        key dp_id         : Integer     not null;

            @Comment : 'name of table that stores values of sensor'
            table_name    : String(255) not null;

            @Comment : 'technical address of sensor'
            address       : String(16)  not null;

            @Comment : 'identifier of sensor'
            identifier    : String(40)  not null;

            @Comment : 'description of sensor'
            display_name  : String(255);
            room          : String(255);
            param_set     : String(20);
            unit          : String(20);
            maximum       : DecimalFloat;
            minimum       : DecimalFloat;
            type          : String(10);
            default_value : DecimalFloat;
            last_ts_read  : UTCDateTime;
    }
    technical configuration {
        column store;
    };
    
    entity Equipment{
    	key equnr : String(18) not null;
    	eqtxt : String(40);
    	sernr : String(18);
    	matnr : String(18);
    	room  : String(255);
    	building: String(255);
    }
    technical configuration {
        column store;
    };
    
    entity Notification{
    	key qmnum: String(12) not null;
    	qmtxt: String(40);
    	equnr: String(18);
        codegr: String(8);
        code: String(4);
    	resp_name:String(255);
    	notif_status:String(40);
    	transf_status:String(40);
    }
    technical configuration {
        column store;
    };
    
    entity NotifTasks{
    	key qmnum: String(12) not null;
    	key taskcodegr: String(8);
        key taskcode: String(4);
    }
    
    entity Tasks{
        key taskcodegr: String(8);
        key taskcode: String(4);
    	task_text: String(80);
    }
    technical configuration {
        column store;
    };
    
    entity Problems{
    	key codegr: String(8);
        key code: String(4);
        problem_text : String(40);
    }
    technical configuration {
        column store;
    };

    entity Settings {
        key param : String(50) not null;
        key index : Integer    not null;
            value : String(255);
    }
    technical configuration {
        column store;
    };

    entity SettingParameters {
        key param       : String(50) not null;
            description : String(60);
    }
    technical configuration {
        column store;
    };
    
    entity DataValues {
         dp_id       : Integer     not null;
         ts          : UTCDateTime not null;
         value       : DecimalFloat;
         state       : Integer;
    }
    technical configuration {
        column store;
    };
    
    entity JobSettings{
    	key job_type   : String(40) not null;
    	run            : String(1);
    	last_heartbeat : UTCDateTime;
    }
    technical configuration {
        column store;
    };
    
    entity HazardCodes{
    	key code : Integer not null;
    	description: String(60);
    }
    technical configuration {
        column store;
    };
    
    
    view Data as select from DataPoint left outer join DataValues on DataPoint.dp_id = DataValues.dp_id {
    	DataPoint.dp_id,
    	DataPoint.address,
    	DataPoint.display_name,
    	DataPoint.identifier,
    	DataPoint.unit,
    	DataPoint.room,
    	DataValues.ts,
    	DataValues.value,
    	DataValues.state
    };
    
    const jobConst : Integer = 1;
    view SensorSyncJob as select from JobSettings {
      :jobConst as id,
      JobSettings.job_type,
      JobSettings.run,
      JobSettings.last_heartbeat
    } where job_type = 'SENSOR_SYNC';
      
    
};